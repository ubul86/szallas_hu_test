version: '3.7'

services:
    nginx:
        image: nginx:1.17.4
        container_name: szallas_hu_nginx
        restart: unless-stopped
        ports:
            - ${NGINX_PORT}:80
        volumes:
            - ./docker_settings/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./docker_settings/logs:/var/log/nginx
            - ./:/var/www/html
        depends_on:
            - php
        networks:
            - app-network

    php:
        build:
            context: ./docker_settings
            dockerfile: ./Dockerfile_php82
        container_name: szallas_hu_php
        restart: unless-stopped
        volumes:
            - ./:/var/www/html
            - ./docker_settings/php.ini:/usr/local/etc/php/conf.d/php-memory-limit.ini
        depends_on:
            - mysql82
        networks:
            - app-network

    php-cli-cron:
        build:
            context: ./docker_settings
            dockerfile: Dockerfile_php_cron
        container_name: szallas_hu_php_cron
        volumes:
            - ./:/var/www/html
            - ./docker_settings/php.ini:/usr/local/etc/php/conf.d/php-memory-limit.ini
        depends_on:
            - php
        networks:
            - app-network

    mysql82:
        build:
            context: ./docker_settings
            dockerfile: ./Dockerfile_mysql82
        container_name: szallas_hu_mysql82
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            TZ: Europe/Budapest
            LANG: C.UTF_8
            MYSQL_CHARSET: utf8mb4
            MYSQL_COLLATION: utf8mb4_unicode_ci
        ports:
            - "33064:3306"
        volumes:
            - ./docker_settings/mysql82_data:/var/lib/mysql
        user: ${CURRENT_UID:-}
        networks:
            - app-network

    mysql_test:
        build:
            context: ./docker_settings
            dockerfile: ./Dockerfile_mysql82
        container_name: szallas_hu_mysql_test
        environment:
            MYSQL_ROOT_PASSWORD: test_root
            MYSQL_DATABASE: test_database
            MYSQL_USER: test_user
            MYSQL_PASSWORD: test_password
            TZ: Europe/Budapest
            LANG: C.UTF_8
            MYSQL_CHARSET: utf8mb4
            MYSQL_COLLATION: utf8mb4_unicode_ci
        ports:
            - "33065:3306"
        volumes:
            - ./docker_settings/mysql_test_data:/var/lib/mysql
        networks:
            - app-network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        restart: unless-stopped
        container_name: szallas_hu_phpmyadmin
        ports:
            - ${PHPMYADMIN_PORT}:80
        environment:
            PMA_HOST: mysql82
            PMA_USER: ${DB_USERNAME}
            PMA_PASSWORD: ${DB_PASSWORD}
            UPLOAD_LIMIT: 1000M
        depends_on:
            - mysql82
        networks:
            - app-network

    node:
        build:
            context: .
            dockerfile: docker_settings/Dockerfile_node
        container_name: szallas_hu_node
        volumes:
            - './:/www/local'
        restart: always
        ports:
            - 8085:8080
        working_dir: /www/local
        networks:
            - app-network

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.10.1
        container_name: szallas_hu_elasticsearch
        environment:
            - discovery.type=single-node
            - bootstrap.memory_lock=true
            - ES_JAVA_OPTS=-Xms512m -Xmx512m
            - ELASTIC_PASSWORD=${ELASTICSEARCH_PASS}
            - http.cors.enabled=true
            - http.cors.allow-origin="http://localhost:8081"
            - http.cors.allow-headers="X-Requested-With,Content-Type,Content-Length,Authorization"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - "9200:9200"
        networks:
            - app-network
        volumes:
            - ./docker_settings/elasticsearch_data:/usr/share/elasticsearch/data

    elasticvue:
        image: cars10/elasticvue:latest
        container_name: szallas_hu_elasticvue
        environment:
            - ELASTICSEARCH_HOSTS=${ELASTICSEARCH_HOST}
            - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USER}
            - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASS}
        ports:
            - "8081:8080"
        networks:
            - app-network
        depends_on:
            - elasticsearch

networks:
    app-network:
        driver: bridge
    web:
        external: true

volumes:
    mysql_data:
        driver: local
